#!/bin/bash

# –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Film!
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç docker-compose.prod.yml

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
check_env() {
    if [ ! -f ".env" ]; then
        log_error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        log_info "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.example –≤ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars=("DATABASE_PASSWORD" "PGADMIN_PASSWORD" "GITHUB_TOKEN")
    for var in "${required_vars[@]}"; do
        if ! grep -q "^${var}=" .env; then
            log_error "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env"
            exit 1
        fi
    done
    
    log_success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        log_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    log_success "Docker –∏ Docker Compose –¥–æ—Å—Ç—É–ø–Ω—ã"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_existing() {
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
    log_success "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
deploy_production() {
    log_info "–î–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω..."
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
    log_info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f docker-compose.prod.yml build --no-cache
    
    # –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
    log_info "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.prod.yml up -d
    
    log_success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
health_check() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
    if curl -s --connect-timeout 10 "http://localhost:3000/api/afisha/films" > /dev/null; then
        log_success "Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_error "Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend —á–µ—Ä–µ–∑ nginx
    if curl -s --connect-timeout 10 -I "http://localhost:80" | grep -q "200 OK"; then
        log_success "Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_error "Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        return 1
    fi
    
    log_success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
}

# –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ–ø–ª–æ–µ
show_deploy_info() {
    echo ""
    echo "üöÄ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ:"
    echo "========================"
    echo "‚Ä¢ Backend API: http://localhost:3000/api/afisha"
    echo "‚Ä¢ Frontend: http://localhost:80"
    echo "‚Ä¢ pgAdmin: http://localhost:8080"
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.prod.yml ps
    echo ""
    echo "üìù –õ–æ–≥–∏:"
    echo "  docker-compose -f docker-compose.prod.yml logs -f"
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞:"
    echo "  docker-compose -f docker-compose.prod.yml down"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω - Film! Project"
    echo "====================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_env
    check_docker
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    log_warning "–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–µ"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "–î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω"
        exit 0
    fi
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–ø–ª–æ—è
    stop_existing
    deploy_production
    health_check
    show_deploy_info
    
    log_success "üéâ –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 